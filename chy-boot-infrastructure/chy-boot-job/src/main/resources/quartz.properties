# ===========================================================================
# Quartz集群配置
# ===========================================================================

# 调度器实例名称
org.quartz.scheduler.instanceName = ChyBootScheduler
# 调度器实例ID，自动生成
org.quartz.scheduler.instanceId = AUTO

# 线程池配置
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# 线程池中的线程数量
org.quartz.threadPool.threadCount = 10
# 线程优先级
org.quartz.threadPool.threadPriority = 5
# 是否为守护线程
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

# 持久化方式配置
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 持久化方式配置数据驱动，MySQL数据库
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# quartz相关数据表前缀名
org.quartz.jobStore.tablePrefix = QRTZ_
# 开启分布式部署
org.quartz.jobStore.isClustered = true
# 分布式节点有效性检查时间间隔，单位：毫秒
org.quartz.jobStore.clusterCheckinInterval = 10000
# 数据保存方式为数据库持久化
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 数据库连接池
org.quartz.jobStore.useProperties = true
# 事务隔离
org.quartz.jobStore.acquireTriggersWithinLock = true
# 事务隔离级别
org.quartz.jobStore.txIsolationLevelSerializable = false

# 调度器编码器及解码器
org.quartz.scheduler.exporter.proxy = false
org.quartz.scheduler.exporter.snapshotJobDataOnShutdown = false

# 是否允许任务在没有调度时执行
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false
# 设置为true使misfire配置生效
org.quartz.jobStore.misfireThreshold = 60000 