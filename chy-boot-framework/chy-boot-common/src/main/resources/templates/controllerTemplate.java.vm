package ${package.Controller};


import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

@Autowired
public ${table.serviceName} i${entity}Service;


    @ApiOperation("获取详情" )
    @RequestMapping(value = "/${entity}s/{id}" ,method = RequestMethod.GET)
    @ResponseBody
    public R<Response${entity}> get(@PathVariable String id){

        Response${entity} data = i${entity}Service.get(id);
        return R.data(data);
    }


    @ApiOperation("删除" )
    @RequestMapping(value = "/${entity}s/{id}", method = RequestMethod.DELETE)
    @ResponseBody
    public R<Boolean> del(@PathVariable String id){

        boolean data = i${entity}Service.removeById(id);
        return R.data(data);
    }

    @ApiOperation("新增" )
    @RequestMapping(value = "/${entity}s", method = RequestMethod.POST)
    @ResponseBody
    public R<Response${entity}> add(@RequestBody Req${entity}Add add){

        Response${entity} data = i${entity}Service.insert(add);
        return R.data(data);
    }

    @ApiOperation("更新" )
    @RequestMapping(value = "/${entity}s/{id}", method = RequestMethod.PUT)
    @ResponseBody
    public R update(@PathVariable String id, @RequestBody Req${entity}Update reqUpdate){

        boolean data = i${entity}Service.update(id, reqUpdate);
        return R.data(data);
    }
}

#end